import pulp as pl
import numpy as np

# Исходные данные (прямой задачи).
# Первые 2 элемента - коэффициенты в ограничениях прямой задачи.
# Третий элемент - коэффициенты целевой функции.
initial_data = np.array([[-2, -1, 6],
                         [-1, 3, 9],
                         [1, 1, 0]])

# Начинаем процесс перехода к двойственной задаче.
b = initial_data.transpose()

# Создаем задачу минимизации LP (т. к. для прямой задачи была максимизация).
task = pl.LpProblem("problem", pl.LpMinimize)

# Каждое ограничение прямой задачи становится двойственной переменной.
# Первый агрумент - имя переменной, второй и третий - ограничения слева и справа соответсвенно.
y1 = pl.LpVariable('y1', None, 0)
y2 = pl.LpVariable('y2', 0, None)

# Целевая функция двойственной задачи.
task += (b[2, 0] * y1 + b[2, 1] * y2)

# Каждая переменная прямой задачи становится двойственным ограничением.
# Коэффициент двойственной переменной в двойственных ограничениях равен коэффициенту переменной из ограничения прямой задачи.
task += (b[0, 0] * y1 + b[0, 1] * y2 >= b[0, 2])
task += (b[1, 0] * y1 + b[1, 1] * y2 >= b[1, 2])

# Решаем двойственную задачу.
status = task.solve()

# Вывод результатов.
print("Results:")
print("-------------------------------")
print(f'Result: {pl.value(task.objective)}')
print(f'y1 = {y1.varValue}')
print(f'y2 = {y2.varValue}')
print("-------------------------------")
